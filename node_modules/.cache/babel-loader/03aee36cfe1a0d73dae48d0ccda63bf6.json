{"ast":null,"code":"var _jsxFileName = \"/Users/mst3r/Desktop/React/react-mix-firebase-auth/src/components/Test.js\";\nimport React, { useReducer } from \"react\";\nconst initialState = {\n  number: 0\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"load\":\n      return { ...state\n      };\n\n    default:\n      break;\n  }\n};\n\nconst Test = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"inc\",\n      payload: state.number++\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), state.number);\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/mst3r/Desktop/React/react-mix-firebase-auth/src/components/Test.js"],"names":["React","useReducer","initialState","number","reducer","state","action","type","Test","dispatch","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AACE,aAAO,EACL,GAAGF;AADE,OAAP;;AAIF;AACE;AAPJ;AASD,CAVD;;AAYA,MAAMG,IAAI,GAAG,MAAM;AACjB,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBR,UAAU,CAACG,OAAD,EAAUF,YAAV,CAApC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,OAAO,EAAEL,KAAK,CAACF,MAAN;AAAxB,KAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIGE,KAAK,CAACF,MAJT,CADF;AAQD,CAXD;;AAaA,eAAeK,IAAf","sourcesContent":["import React, { useReducer } from \"react\";\n\nconst initialState = {\n  number: 0,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"load\":\n      return {\n        ...state,\n      };\n\n    default:\n      break;\n  }\n};\n\nconst Test = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div>\n      <button\n        onClick={() => dispatch({ type: \"inc\", payload: state.number++ })}\n      ></button>\n      {state.number}\n    </div>\n  );\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}