{"ast":null,"code":"var _jsxFileName = \"/Users/mst3r/Desktop/React/react-mix-firebase-auth/src/components/Test.js\";\nimport { act } from \"@testing-library/react\";\nimport React, { useReducer } from \"react\";\nconst initialState = {\n  number: 0\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"inc\":\n      return {\n        number: state.number,\n        ...action.payload\n      };\n\n    case \"dec\":\n      return {\n        number: state.number,\n        ...action.payload\n      };\n\n    default:\n      break;\n  }\n};\n\nconst Test = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"inc\",\n      payload: tate.number + 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Incremenet\"), state.number, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"dec\",\n      payload: state.number - 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Decremement\"));\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/mst3r/Desktop/React/react-mix-firebase-auth/src/components/Test.js"],"names":["act","React","useReducer","initialState","number","reducer","state","action","type","payload","Test","dispatch","tate"],"mappings":";AAAA,SAASA,GAAT,QAAoB,wBAApB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAO;AACLJ,QAAAA,MAAM,EAAEE,KAAK,CAACF,MADT;AAEL,WAAGG,MAAM,CAACE;AAFL,OAAP;;AAIF,SAAK,KAAL;AACE,aAAO;AACLL,QAAAA,MAAM,EAAEE,KAAK,CAACF,MADT;AAEL,WAAGG,MAAM,CAACE;AAFL,OAAP;;AAIF;AACE;AAZJ;AAcD,CAfD;;AAiBA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBT,UAAU,CAACG,OAAD,EAAUF,YAAV,CAApC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAMQ,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAEG,IAAI,CAACR,MAAL,GAAc;AAAtC,KAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAMGE,KAAK,CAACF,MANT,eAOE;AACE,IAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAEH,KAAK,CAACF,MAAN,GAAe;AAAvC,KAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,CADF;AAeD,CAlBD;;AAoBA,eAAeM,IAAf","sourcesContent":["import { act } from \"@testing-library/react\";\nimport React, { useReducer } from \"react\";\n\nconst initialState = {\n  number: 0,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"inc\":\n      return {\n        number: state.number,\n        ...action.payload,\n      };\n    case \"dec\":\n      return {\n        number: state.number,\n        ...action.payload,\n      };\n    default:\n      break;\n  }\n};\n\nconst Test = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div>\n      <button\n        onClick={() => dispatch({ type: \"inc\", payload: tate.number + 1 })}\n      >\n        Incremenet\n      </button>\n      {state.number}\n      <button\n        onClick={() => dispatch({ type: \"dec\", payload: state.number - 1 })}\n      >\n        Decremement\n      </button>\n    </div>\n  );\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}