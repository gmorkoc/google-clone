{"ast":null,"code":"var _jsxFileName = \"/Users/mst3r/Desktop/React/react-mix-firebase-auth/src/components/Inbox.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"../components/Inbox.css\";\nimport { useStateValue } from \"../DataContext/DataContext\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useHistory } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFetch\";\nimport Actions from \"../Actions\";\n\nconst Inbox = ({\n  actionsVisible\n}) => {\n  const [{\n    inbox,\n    page,\n    nav\n  }, dispatch] = useStateValue();\n  const history = useHistory(null);\n  const [visible, setVisible] = useState(false);\n  const res = useFetch(`https://dummyapi.io/data/api/post?limit=${page}`);\n  const [activeEmail, setActiveEmail] = useState(\"UWdcOFTc7DfzOhI6LpI4\");\n  useEffect(() => {\n    if (res.response !== null && inbox.length !== page) {\n      dispatch({\n        type: \"load_inbox\",\n        payload: res.response.data,\n        page: page\n      });\n    }\n  }, [res.response, page]);\n  const inboxContainer = useRef(null);\n  const [selectedEmails, setSelectedEmails] = useState([]);\n  useEffect(() => {\n    console.log(selectedEmails);\n  }, [selectedEmails]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Actions, {\n    actionsVisible: visible,\n    remove: () => {\n      dispatch({\n        type: \"remove_email\",\n        removed: selectedEmails\n      }); // inboxContainer.current.querySelectorAll(\"input:checked\").length = 0;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \" \", page > 25 ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      console.log(page - 25);\n      dispatch({\n        type: \"load_inbox\",\n        payload: res.response.data,\n        page: page - 25\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"<\") : null, page - 25, \"-\", page, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      console.log(page + 25);\n      dispatch({\n        type: \"load_inbox\",\n        payload: res.response.data,\n        page: page + 25\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \">\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inbox__container\",\n    ref: inboxContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, inbox.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    id: item.id,\n    className: `inbox__item ${item.isRead == false ? \"selected__email\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: item.id,\n    onClick: e => {\n      setSelectedEmails([...selectedEmails, item]);\n\n      if (inboxContainer.current.querySelectorAll(\"input:checked\").length > 0) {\n        setVisible(true);\n      } else {\n        setVisible(false);\n      }\n    },\n    color: \"primary\",\n    inputProps: {\n      \"aria-label\": \"secondary checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add__favorites\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://www.gstatic.com/images/icons/material/system/2x/star_border_white_20dp.png\",\n    width: \"20\",\n    height: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\"\n    },\n    onClick: e => {\n      console.log(activeEmail);\n      dispatch({\n        type: \"preview_email\",\n        payload: item.id\n      });\n      setActiveEmail(item.id);\n      history.push(\"/preview\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sender__img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image,\n    width: \"24\",\n    height: \"24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, item.owner.firstName, \" \", item.owner.lastName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, \" \", item.text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, \" \", item.publishDate)))).splice(page - 25, page))));\n};\n\nexport default Inbox;","map":{"version":3,"sources":["/Users/mst3r/Desktop/React/react-mix-firebase-auth/src/components/Inbox.js"],"names":["React","useEffect","useRef","useState","useStateValue","Button","Checkbox","useHistory","useFetch","Actions","Inbox","actionsVisible","inbox","page","nav","dispatch","history","visible","setVisible","res","activeEmail","setActiveEmail","response","length","type","payload","data","inboxContainer","selectedEmails","setSelectedEmails","console","log","removed","map","item","index","id","isRead","e","current","querySelectorAll","display","width","alignItems","push","image","owner","firstName","lastName","text","publishDate","splice"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"../components/Inbox.css\";\nimport { useStateValue } from \"../DataContext/DataContext\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useHistory } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFetch\";\nimport Actions from \"../Actions\";\n\nconst Inbox = ({ actionsVisible }) => {\n  const [{ inbox, page, nav }, dispatch] = useStateValue();\n  const history = useHistory(null);\n  const [visible, setVisible] = useState(false);\n  const res = useFetch(`https://dummyapi.io/data/api/post?limit=${page}`);\n  const [activeEmail, setActiveEmail] = useState(\"UWdcOFTc7DfzOhI6LpI4\");\n\n  useEffect(() => {\n    if (res.response !== null && inbox.length !== page) {\n      dispatch({ type: \"load_inbox\", payload: res.response.data, page: page });\n    }\n  }, [res.response, page]);\n\n  const inboxContainer = useRef(null);\n\n  const [selectedEmails, setSelectedEmails] = useState([]);\n\n  useEffect(() => {\n    console.log(selectedEmails);\n  }, [selectedEmails]);\n\n  return (\n    <div className=\"content__container\">\n      <div className=\"pagination__container\">\n        <Actions\n          actionsVisible={visible}\n          remove={() => {\n            dispatch({\n              type: \"remove_email\",\n              removed: selectedEmails,\n            });\n            // inboxContainer.current.querySelectorAll(\"input:checked\").length = 0;\n          }}\n        />\n        <div className=\"pagination\">\n          {\" \"}\n          {page > 25 ? (\n            <button\n              onClick={() => {\n                console.log(page - 25);\n                dispatch({\n                  type: \"load_inbox\",\n                  payload: res.response.data,\n                  page: page - 25,\n                });\n              }}\n            >\n              {\"<\"}\n            </button>\n          ) : null}\n          {page - 25}-{page}\n          <button\n            onClick={() => {\n              console.log(page + 25);\n              dispatch({\n                type: \"load_inbox\",\n                payload: res.response.data,\n                page: page + 25,\n              });\n            }}\n          >\n            {\">\"}\n          </button>\n        </div>\n      </div>\n      <div className=\"inbox__container\" ref={inboxContainer}>\n        <ul>\n          {inbox\n            .map((item, index) => (\n              <li\n                id={item.id}\n                className={`inbox__item ${\n                  item.isRead == false ? \"selected__email\" : \"\"\n                }`}\n              >\n                <div className=\"checkbox__container\">\n                  <Checkbox\n                    id={item.id}\n                    onClick={(e) => {\n                      setSelectedEmails([...selectedEmails, item]);\n                      if (\n                        inboxContainer.current.querySelectorAll(\"input:checked\")\n                          .length > 0\n                      ) {\n                        setVisible(true);\n                      } else {\n                        setVisible(false);\n                      }\n                    }}\n                    color=\"primary\"\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </div>\n                <div className=\"add__favorites\">\n                  <img\n                    src=\"https://www.gstatic.com/images/icons/material/system/2x/star_border_white_20dp.png\"\n                    width=\"20\"\n                    height=\"20\"\n                  />\n                </div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    width: \"100%\",\n                    alignItems: \"center\",\n                  }}\n                  onClick={(e) => {\n                    console.log(activeEmail);\n                    dispatch({ type: \"preview_email\", payload: item.id });\n                    setActiveEmail(item.id);\n                    history.push(\"/preview\");\n                  }}\n                >\n                  {\" \"}\n                  <div className=\"sender__img\">\n                    <img src={item.image} width=\"24\" height=\"24\" />\n                  </div>\n                  <div className=\"sender\">\n                    {item.owner.firstName} {item.owner.lastName}\n                  </div>\n                  <div className=\"preview\"> {item.text}</div>\n                  <div className=\"date\"> {item.publishDate}</div>\n                </div>\n              </li>\n            ))\n            .splice(page - 25, page)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Inbox;\n"]},"metadata":{},"sourceType":"module"}