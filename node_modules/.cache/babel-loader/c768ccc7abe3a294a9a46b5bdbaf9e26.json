{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\n\nconst useFetch = (url, options) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const res = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"app-id\": \"MJg47OQxEGTwunLzeonB\"\n          }\n        });\n        const json = await res.json();\n        setResponse(json);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    response,\n    error,\n    isLoading\n  };\n};\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/mst3r/Desktop/React/react-mix-firebase-auth/src/hooks/useFetch.js"],"names":["React","useEffect","useState","useFetch","url","options","response","setResponse","error","setError","isLoading","setIsLoading","fetchData","res","fetch","method","headers","json"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,SAAS,GAAG,YAAY;AAC5BD,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACF,cAAME,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAD,EAAM;AAC3BW,UAAAA,MAAM,EAAE,KADmB;AAE3BC,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEP,sBAAU;AAFH;AAFkB,SAAN,CAAvB;AAOA,cAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAJ,EAAnB;AACAV,QAAAA,WAAW,CAACU,IAAD,CAAX;AACAN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAXD,CAWE,OAAOH,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,KAhBD;;AAiBAI,IAAAA,SAAS;AACV,GAnBQ,EAmBN,CAACR,GAAD,CAnBM,CAAT;AAoBA,SAAO;AAAEE,IAAAA,QAAF;AAAYE,IAAAA,KAAZ;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CAzBD;;AA2BA,eAAeP,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst useFetch = (url, options) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const res = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"app-id\": \"MJg47OQxEGTwunLzeonB\",\n          },\n        });\n        const json = await res.json();\n        setResponse(json);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return { response, error, isLoading };\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}